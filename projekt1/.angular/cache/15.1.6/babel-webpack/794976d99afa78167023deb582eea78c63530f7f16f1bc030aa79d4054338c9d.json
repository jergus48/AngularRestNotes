{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./notes.service\";\nimport * as i2 from \"@angular/common\";\nfunction AppComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"h1\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"button\", 1);\n    i0.ɵɵlistener(\"click\", function AppComponent_div_0_Template_button_click_3_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const note_r1 = restoredCtx.$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.OnDelete(note_r1));\n    });\n    i0.ɵɵtext(4, \"Delete\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"button\", 1);\n    i0.ɵɵlistener(\"click\", function AppComponent_div_0_Template_button_click_5_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const note_r1 = restoredCtx.$implicit;\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.OnChange(note_r1));\n    });\n    i0.ɵɵtext(6, \"Change\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const note_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\", note_r1.name, \" \");\n  }\n}\nexport class AppComponent {\n  constructor(NotesService) {\n    this.NotesService = NotesService;\n    this.title = 'Rest Notes';\n    this.notes$ = [];\n  }\n  ngOnInit() {\n    this.GetData();\n  }\n  GetData() {\n    this.NotesService.getNote().subscribe(data => {\n      this.notes$ = data;\n    });\n  }\n  OnSubmit() {\n    this.NotesService.addNote().subscribe();\n  }\n  OnDelete(note) {\n    this.NotesService.deleteNote(note).subscribe();\n    this.GetData();\n  }\n  OnChange(note) {\n    note.name = note.name + \"a\";\n    this.NotesService.changeNote(note).subscribe();\n  }\n}\nAppComponent.ɵfac = function AppComponent_Factory(t) {\n  return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.NotesService));\n};\nAppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AppComponent,\n  selectors: [[\"app-root\"]],\n  decls: 5,\n  vars: 3,\n  consts: [[4, \"ngFor\", \"ngForOf\"], [3, \"click\"]],\n  template: function AppComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, AppComponent_div_0_Template, 7, 1, \"div\", 0);\n      i0.ɵɵpipe(1, \"async\");\n      i0.ɵɵelementStart(2, \"form\")(3, \"button\", 1);\n      i0.ɵɵlistener(\"click\", function AppComponent_Template_button_click_3_listener() {\n        return ctx.OnSubmit();\n      });\n      i0.ɵɵtext(4, \"Submit\");\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(1, 1, ctx.notes$));\n    }\n  },\n  dependencies: [i2.NgForOf, i2.AsyncPipe],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;;IAAAA,2BAAyC;IACnCA,YAAc;IAAAA,iBAAK;IACvBA,iCAAiC;IAAzBA;MAAA;MAAA;MAAA;MAAA,OAASA,uCAAc;IAAA,EAAC;IAACA,sBAAM;IAAAA,iBAAS;IAChDA,iCAAiC;IAAzBA;MAAA;MAAA;MAAA;MAAA,OAASA,uCAAc;IAAA,EAAC;IAACA,sBAAM;IAAAA,iBAAS;;;;IAF5CA,eAAc;IAAdA,4CAAc;;;ACMpB,OAAM,MAAOC,YAAY;EAIvBC,YAAoBC,YAA0B;IAA1B,iBAAY,GAAZA,YAAY;IAHhC,UAAK,GAAG,YAAY;IACpB,WAAM,GAAQ,EAAE;EAEkC;EAElDC,QAAQ;IACN,IAAI,CAACC,OAAO,EAAE;EAEhB;EACAA,OAAO;IACL,IAAI,CAACF,YAAY,CAACG,OAAO,EAAE,CAACC,SAAS,CAACC,IAAI,IAAG;MAAG,IAAI,CAACC,MAAM,GAAGD,IAAI;IAAC,CAAC,CAAC;EACvE;EACAE,QAAQ;IACN,IAAI,CAACP,YAAY,CAACQ,OAAO,EAAE,CAACJ,SAAS,EAAE;EACzC;EACAK,QAAQ,CAACC,IAAS;IAChB,IAAI,CAACV,YAAY,CAACW,UAAU,CAACD,IAAI,CAAC,CAACN,SAAS,EAAE;IAC9C,IAAI,CAACF,OAAO,EAAE;EAChB;EACAU,QAAQ,CAACF,IAAS;IAChBA,IAAI,CAACG,IAAI,GAAGH,IAAI,CAACG,IAAI,GAAG,GAAG;IAC3B,IAAI,CAACb,YAAY,CAACc,UAAU,CAACJ,IAAI,CAAC,CAACN,SAAS,EAAE;EAGhD;;AAzBWN,YAAY;mBAAZA,YAAY;AAAA;AAAZA,YAAY;QAAZA,YAAY;EAAAiB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDPzBtB,6DAIM;;MACNA,4BAAM;MAEIA;QAAA,OAASuB,cAAU;MAAA,EAAC;MAACvB,sBAAM;MAAAA,iBAAS;;;MAPxBA,0DAAiB","names":["i0","AppComponent","constructor","NotesService","ngOnInit","GetData","getNote","subscribe","data","notes$","OnSubmit","addNote","OnDelete","note","deleteNote","OnChange","name","changeNote","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\Jergus\\Documents\\web\\Angular\\angular_rest_notes\\projekt1\\src\\app\\app.component.html","C:\\Users\\Jergus\\Documents\\web\\Angular\\angular_rest_notes\\projekt1\\src\\app\\app.component.ts"],"sourcesContent":["<div *ngFor=\"let note of notes$ | async\">\n  <h1>{{note.name}} </h1>\n  <button (click)=\"OnDelete(note)\">Delete</button>\n  <button (click)=\"OnChange(note)\">Change</button>\n</div>\n<form>\n\n  <button (click)=\"OnSubmit()\">Submit</button>\n\n</form>","import { Component } from '@angular/core';\nimport { NotesService } from './notes.service';\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Rest Notes';\n  notes$: any = [];\n\n  constructor(private NotesService: NotesService) { }\n\n  ngOnInit() {\n    this.GetData()\n\n  }\n  GetData() {\n    this.NotesService.getNote().subscribe(data => { this.notes$ = data })\n  }\n  OnSubmit() {\n    this.NotesService.addNote().subscribe()\n  }\n  OnDelete(note: any) {\n    this.NotesService.deleteNote(note).subscribe()\n    this.GetData()\n  }\n  OnChange(note: any) {\n    note.name = note.name + \"a\"\n    this.NotesService.changeNote(note).subscribe()\n\n\n  }\n\n\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}