{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./notes.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/router\";\nconst _c0 = function (a1) {\n  return [\"/note\", a1];\n};\nfunction NotesComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\")(2, \"a\", 6);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"button\", 7);\n    i0.ɵɵlistener(\"click\", function NotesComponent_div_0_Template_button_click_4_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r5);\n      const note_r3 = restoredCtx.$implicit;\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.OnDelete(note_r3));\n    });\n    i0.ɵɵtext(5, \"Delete\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"button\", 7);\n    i0.ɵɵlistener(\"click\", function NotesComponent_div_0_Template_button_click_6_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r5);\n      const note_r3 = restoredCtx.$implicit;\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.OnChange(note_r3));\n    });\n    i0.ɵɵtext(7, \"Change\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelement(8, \"br\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const note_r3 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction1(2, _c0, note_r3.id));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", note_r3.name, \" \");\n  }\n}\nexport class NotesComponent {\n  constructor(NoteService) {\n    this.NoteService = NoteService;\n    this.notes = [{\n      name: \"cau\",\n      text: \"cau\"\n    }];\n  }\n  ngOnInit() {\n    this.GetData();\n  }\n  setValue(name, text) {\n    this.NoteService.addNote(name, text).subscribe();\n    setTimeout(() => {\n      this.GetData();\n    }, 100);\n  }\n  GetData() {\n    this.NoteService.getNote().subscribe(data => {\n      this.notes = data;\n    });\n  }\n  OnDelete(note) {\n    this.NoteService.deleteNote(note).subscribe();\n    setTimeout(() => {\n      this.GetData();\n    }, 100);\n  }\n  OnChange(note) {\n    note.name = note.name + \"a\";\n    this.NoteService.changeNote(note).subscribe();\n  }\n}\nNotesComponent.ɵfac = function NotesComponent_Factory(t) {\n  return new (t || NotesComponent)(i0.ɵɵdirectiveInject(i1.NotesService));\n};\nNotesComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: NotesComponent,\n  selectors: [[\"notes-component\"]],\n  decls: 8,\n  vars: 1,\n  consts: [[4, \"ngFor\", \"ngForOf\"], [\"type\", \"text\", \"id\", \"name\", \"name\", \"name\", \"placeholder\", \"Name\"], [\"name\", \"\"], [\"placeholder\", \"text\", \"type\", \"text\", \"id\", \"text\", \"name\", \"text\"], [\"text\", \"\"], [\"type\", \"button\", 3, \"click\"], [2, \"font-size\", \"x-large\", 3, \"routerLink\"], [3, \"click\"]],\n  template: function NotesComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r7 = i0.ɵɵgetCurrentView();\n      i0.ɵɵtemplate(0, NotesComponent_div_0_Template, 9, 4, \"div\", 0);\n      i0.ɵɵelementStart(1, \"div\");\n      i0.ɵɵelement(2, \"input\", 1, 2)(4, \"input\", 3, 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"button\", 5);\n      i0.ɵɵlistener(\"click\", function NotesComponent_Template_button_click_6_listener() {\n        i0.ɵɵrestoreView(_r7);\n        const _r1 = i0.ɵɵreference(3);\n        const _r2 = i0.ɵɵreference(5);\n        return i0.ɵɵresetView(ctx.setValue(_r1.value, _r2.value));\n      });\n      i0.ɵɵtext(7, \"Submit\");\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngForOf\", ctx.notes);\n    }\n  },\n  dependencies: [i2.NgForOf, i3.RouterLink],\n  encapsulation: 2\n});","map":{"version":3,"mappings":";;;;;;;;;;IAAAA,2BAAiC;IAEuCA,YAAc;IAAAA,iBAAI;IAClFA,iCAAiC;IAAzBA;MAAA;MAAA;MAAA;MAAA,OAASA,uCAAc;IAAA,EAAC;IAACA,sBAAM;IAAAA,iBAAS;IAChDA,iCAAiC;IAAzBA;MAAA;MAAA;MAAA;MAAA,OAASA,uCAAc;IAAA,EAAC;IAACA,sBAAM;IAAAA,iBAAS;IAEpDA,qBAAI;IACRA,iBAAM;;;;IALKA,eAAgC;IAAhCA,mEAAgC;IAA6BA,eAAc;IAAdA,6CAAc;;;ACQtF,OAAM,MAAOC,cAAc;EAGvBC,YAAoBC,WAAyB;IAAzB,gBAAW,GAAXA,WAAW;IAF/B,UAAK,GAAQ,CAAC;MAAEC,IAAI,EAAE,KAAK;MAAEC,IAAI,EAAE;IAAK,CAAE,CAAC;EAEM;EAEjDC,QAAQ;IACJ,IAAI,CAACC,OAAO,EAAE;EAElB;EACAC,QAAQ,CAACJ,IAAY,EAAEC,IAAY;IAE/B,IAAI,CAACF,WAAW,CAACM,OAAO,CAACL,IAAI,EAAEC,IAAI,CAAC,CAACK,SAAS,EAAE;IAChDC,UAAU,CAAC,MAAK;MACZ,IAAI,CAACJ,OAAO,EAAE;IAClB,CAAC,EAAE,GAAG,CAAC;EACX;EACAA,OAAO;IACH,IAAI,CAACJ,WAAW,CAACS,OAAO,EAAE,CAACF,SAAS,CAACG,IAAI,IAAG;MAAG,IAAI,CAACC,KAAK,GAAGD,IAAI;IAAC,CAAC,CAAC;EACvE;EAEAE,QAAQ,CAACC,IAAS;IACd,IAAI,CAACb,WAAW,CAACc,UAAU,CAACD,IAAI,CAAC,CAACN,SAAS,EAAE;IAC7CC,UAAU,CAAC,MAAK;MACZ,IAAI,CAACJ,OAAO,EAAE;IAClB,CAAC,EAAE,GAAG,CAAC;EAEX;EACAW,QAAQ,CAACF,IAAS;IACdA,IAAI,CAACZ,IAAI,GAAGY,IAAI,CAACZ,IAAI,GAAG,GAAG;IAC3B,IAAI,CAACD,WAAW,CAACgB,UAAU,CAACH,IAAI,CAAC,CAACN,SAAS,EAAE;EAGjD;;AAhCST,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;QAAdA,cAAc;EAAAmB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;;MDV3BxB,+DAOM;MACNA,2BAAK;MAAAA,8BAAkE;MAEvEA,iBAAM;MACNA,iCAAgE;MAA1CA;QAAAA;QAAA;QAAA;QAAA,OAASA,iDAA+B;MAAA,EAAC;MAACA,sBAAM;MAAAA,iBAAS;;;MAXzDA,mCAAQ","names":["i0","NotesComponent","constructor","NoteService","name","text","ngOnInit","GetData","setValue","addNote","subscribe","setTimeout","getNote","data","notes","OnDelete","note","deleteNote","OnChange","changeNote","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\Jergus\\Documents\\web\\Angular\\angular_rest_notes\\projekt1\\src\\app\\Notes\\notes.component.html","C:\\Users\\Jergus\\Documents\\web\\Angular\\angular_rest_notes\\projekt1\\src\\app\\Notes\\notes.component.ts"],"sourcesContent":["<div *ngFor=\"let note of notes \">\r\n    <div>\r\n        <a [routerLink]=\"['/note',note.id]\" style=\"font-size:x-large;\"> {{note.name}} </a>\r\n        <button (click)=\"OnDelete(note)\">Delete</button>\r\n        <button (click)=\"OnChange(note)\">Change</button>\r\n    </div>\r\n    <br>\r\n</div>\r\n<div><input type=\"text\" id=\"name\" name=\"name\" placeholder=\"Name\" #name><input placeholder=\"text\" type=\"text\" id=\"text\"\r\n        name=\"text\" #text>\r\n</div>\r\n<button type=\"button\" (click)=\"setValue(name.value,text.value)\">Submit</button>","\r\n\r\n\r\nimport { Component } from '@angular/core';\r\nimport { NotesService } from './notes.service';\r\n@Component({\r\n    selector: 'notes-component',\r\n    templateUrl: './notes.component.html',\r\n    styleUrls: []\r\n})\r\nexport class NotesComponent {\r\n    notes: any = [{ name: \"cau\", text: \"cau\" }];\r\n\r\n    constructor(private NoteService: NotesService) { }\r\n\r\n    ngOnInit() {\r\n        this.GetData()\r\n\r\n    }\r\n    setValue(name: string, text: string) {\r\n\r\n        this.NoteService.addNote(name, text).subscribe()\r\n        setTimeout(() => {\r\n            this.GetData()\r\n        }, 100);\r\n    }\r\n    GetData() {\r\n        this.NoteService.getNote().subscribe(data => { this.notes = data })\r\n    }\r\n\r\n    OnDelete(note: any) {\r\n        this.NoteService.deleteNote(note).subscribe()\r\n        setTimeout(() => {\r\n            this.GetData()\r\n        }, 100);\r\n\r\n    }\r\n    OnChange(note: any) {\r\n        note.name = note.name + \"a\"\r\n        this.NoteService.changeNote(note).subscribe()\r\n\r\n\r\n    }\r\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}